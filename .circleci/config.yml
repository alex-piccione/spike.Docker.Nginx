version: 2
jobs:
  build:
    docker:   
      - image: circleci/buildpack-deps:jessie # ubuntu # debian:stretch
        environment:
          COLOR: red
          PORT: 8083

    steps:
      - checkout

      - setup_remote_docker:
          docker_layer_caching: true

      # https://circleci.com/docs/2.0/configuration-reference/#add_ssh_keys
      - add_ssh_keys:
          fingerprints:
            - "36:2d:7e:36:8d:f5:e0:fd:d3:3c:b0:31:ad:ee:26:e6"

      - run:
          name: Info
          command: echo "Build $CIRCLE_BUILD_NUM (${CIRCLE_BUILD_NUM})"

      - run:
          name: Setup SSH
          command: echo "use a convenient image so it already have open SSH"
            # https://circleci.com/docs/2.0/circleci-images/

            #echo SSH $USER@$SERVER_ADDRESS 
            #apt-get update -y
            # following comamnd try to avoid noisy error messages like: debconf: unable to initialize frontend: Dialog
            # from https://github.com/moby/moby/issues/27988
            #apt-get install dialog apt-utils -y -q 
            #apt-get install openssh-client -y            
            #ls -l /usr/bin/ssh

      - run: 
          name: Build the image
          command: | 
            image=docker build -rm -q -t web:$CIRCLE_BUILD_NUM . 
            ## use commit version
            echo "Image: $image"


          # https://blog.grossman.io/continues-integration-with-circleci-and-angular-cli-2/


      - run:
          name: Pull Nginx image
          command: | 
            mkdir -p ~/.ssh
            echo "4096 SHA256:gq9ZdwfeODAMwg42mRBXRDSw6PJ0URxuhPydKtFSyoI alex@Alex-PC (RSA)" > ~/.ssh/known_hosts
            #echo $K > ~/.ssh/k
            #ls -l ~/.ssh
            #chmod 600 ~/.ssh/k
            #echo 
            #ssh $USER@$SERVER_ADDRESS -o StrictHostKeyChecking=no -i ~/.ssh/k bash -c '
            ssh $USER@$SERVER_ADDRESS -o StrictHostKeyChecking=no bash -c '
              mkdir -p ~/temp
              touch ~/temp/build_$CIRCLE_BUILD_NUM.txt
              docker ps -a
              docker pull nginx
              docker stop web_test
              docker rm web_test
              docker run -d -p 8082:80 --name web_test nginx
              docker ps -a
              curl http://localhost:8082

            '